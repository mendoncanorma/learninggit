<html>

<head>
    <title>Example: Custom Binding</title>
    <link href="../css/bootstrap.css" type="text/css" rel='stylesheet' />
    <link href="../css/style.css" type="text/css" rel='stylesheet' />
</head>

<body>

    <div id="page">

        <div class="container-fluid">
            <div class="row" id="catalogContainer" data-bind="if: visibleCatalog">
                <div class="col-xs-12" data-bind="template:{name:'header'}"></div>
                <div class="col-xs-6" data-bind="template:{name:'catalog'}"></div>
                <div id="cartContainer" class="col-xs-6" data-bind="if: visibleCart">
                    <div class="well" data-bind="template:{name:'cart'}"></div>
                </div>
            </div>
            <div class="row" id="orderContainer" data-bind="ifnot: visibleCatalog">
                <div data-bind="template:{name:'order'}"></div>
            </div>            
            <div data-bind="template: {name:'add-to-catalog-modal'}"></div>
            <div data-bind="template: {name:'finish-order-modal'}"></div>
        </div>

    </div>

    <!-- templates -->
    <script type="text/html" id="header">
        <h1>Catalog</h1>    
        <button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#addToCatalogModal">Add New Product</button>
        <button class="btn btn-primary btn-sm" data-bind="click: showCartDetails, css:{ disabled: cart().length < 1}">Show Cart Details</button>
        <hr/>
    </script>
    
    <script type="text/html" id="catalog">
        <div class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i> Search</span>
            <input type="text" class="form-control" data-bind="textInput: searchTerm">
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Stock</th>
                    <th></th>
                </tr>
            </thead>
            <tbody data-bind="foreach:catalog">
                <tr data-bind="css:hasStock(), style:{'background-color':lineColor}">
                    <td data-bind="text:name"></td>
                    <td data-bind="text:price"></td>
                    <td data-bind="text:stock"></td>
                    <td>
                        <button class="btn btn-primary" data-bind="click:$parent.addToCart">
                            <i class="glyphicon glyphicon-plus-sign"></i> Add
                        </button>
                    </td>
                </tr>
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="3">
                        <strong>Items:</strong><span data-bind="text:catalog().length"></span>
                    </td>
                    <td colspan="1">
                        <span data-bind="template:{name:'cart-widget'}"></span>
                    </td>
                </tr>
            </tfoot>
        </table>
    </script>
    
    <script type="text/html" id="add-to-catalog-modal">
        <div class="modal fade" id="addToCatalogModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form class="form-horizontal" role="form" data-bind="with:newProduct">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">
                                <span aria-hidden="true">&times;</span>
                                <span class="sr-only">Close</span>
                            </button>
                            <h3>Add New Product to the Catalog</h3>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <div class="col-sm-12">
                                    <input type="text" class="form-control" placeholder="Name" data-bind="textInput:name">
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-12">
                                    <input type="text" class="form-control" placeholder="Price" data-bind="textInput:price">
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-12">
                                    <input type="text" class="form-control" placeholder="Stock" data-bind="textInput:stock">
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <div class="form-group">
                                <div class="col-sm-12">
                                    <button type="submit" class="btn btn-default" data-bind="{click:$parent.addProduct}">
                                        <i class="glyphicon glyphicon-plus-sign"></i> Add Product
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>
        <!-- /.modal -->    
    </script>

    <script type="text/html" id="cart-widget">
        Total Items: <span data-bind="text:totalItems"></span>
        Price: <span data-bind="text:grandTotal"></span>    
    </script>
    
    <script type="text/html" id="cart-item">
        <div class="list-group-item" style="overflow: hidden">
            <button type="button" class="close pull-right" data-bind="click:$root.removeFromCart"><span>&times;</span></button>
            <h4 class="" data-bind="text:product.name"></h4>
            <div class="input-group cart-unit">
                <input type="text" class="form-control" data-bind="textInput:units" readonly/>
                <span class="input-group-addon">
                    <div class="btn-group-vertical">
                        <button class="btn btn-default btn-xs" data-bind="click:addUnit">
                            <i class="glyphicon glyphicon-chevron-up"></i>
                        </button>
                        <button class="btn btn-default btn-xs" data-bind="click:removeUnit">
                            <i class="glyphicon glyphicon-chevron-down"></i>
                        </button>
                    </div>
                </span>
            </div>
        </div>   
    </script>
    
    <script type="text/html" id="cart">
        <button type="button" class="close pull-right" data-bind="click:hideCartDetails">
            <span>&times;</span>
        </button>
        <h1>Cart</h1>
        <div data-bind="template: {name: 'cart-item', foreach:cart}" class="list-group"></div>
        <div data-bind="template:{name:'cart-widget'}"></div>
        <button class="btn btn-primary btn-sm" data-bind="click:showOrder">
            Confirm Order
        </button> 
    </script>
    
    <script type="text/html" id="order">
        <div class="col-xs-12">
            <button class="btn btn-sm btn-primary" data-bind="click:showCatalog">
                Back to catalog
            </button>
            <button class="btn btn-sm btn-primary" data-bind="click:finishOrder">Buy &amp; finish</button>
        </div>
        <div class="col-xs-6">
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Units</th>
                        <th>Subtotal</th>
                    </tr>
                </thead>
                <tbody data-bind="foreach:cart">
                    <tr>
                        <td data-bind="text:product.name"></td>
                        <td data-bind="text:product.price"></td>
                        <td data-bind="text:units"></td>
                        <td data-bind="text:subtotal"></td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3"></td>
                        <td>Total:<span data-bind="text:grandTotal"></span></td>
                    </tr>
                </tfoot>
            </table>
        </div>    
    </script>
    
    <script type="text/html" id="finish-order-modal">
        <div class="modal fade" id="finishOrderModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-body">
                        <h2>Your order has been completed!</h2>
                    </div>
                    <div class="modal-footer">
                        <div class="form-group">
                            <div class="col-sm-12">
                                <button type="submit" class="btn btn-success" data-dismiss="modal">Continue Shopping
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>
        <!-- /.modal -->
    </script>


    <script src="../js/lib/jquery-1.11.3.min.js"></script>
    <script src="../js/lib/bootstrap.min.js"></script>    
    <script src="../js/lib/knockout-3.4.0.js"></script>
    <script src="../js/model/product.js"></script>
    <script src="../js/model/cartProduct.js"></script>

    <script type="text/javascript">         
        $(document).ready(function() {
            
            var vm = (function() {

                
                
                var catalog = ko.observableArray([
                    Product(1, "T-Shirt", 10.00, 20),
                    Product(2, "Trousers", 20.00, 10),
                    Product(3, "Shirt", 15.00, 20),
                    Product(4, "Shorts", 5.00, 10)
                ]);
                
                var newProduct = Product("", "", "", "");
                
                var clearNewProduct = function () {
                    newProduct.name("");
                    newProduct.price("");
                    newProduct.stock("");
                };                
                
                var addProduct = function (context) {
                    var id = new Date().valueOf();  //random id from time                    
                    var newProduct = Product(id, context.name(), context.price(), context.stock());                    
                    
                    catalog.push(newProduct);
                    clearNewProduct();
                };
                                
                var searchTerm = ko.observable("");
                
                var filteredCatalog = ko.computed(function () {
                    
                    //if catalog is empty return empty array
                    if( !catalog().length ) {
                        return [];
                    }
                    
                    var filter = searchTerm().toLowerCase();
                    
                    //if filter is empty return all the catalog
                    if (!filter) {
                        return catalog();
                    }
                    
                    //filter data
                    var filtered = ko.utils.arrayFilter(catalog(), function (item) {
                        var fields = ["name"]; //we can filter several properties
                        var i = fields.length;
                        
                        while (i--) {
                            var prop = fields[i];
                            var strProp = ko.unwrap(item[prop]).toLocaleLowerCase();

                            if (strProp.indexOf(filter) !== -1){
                                return true;
                            };                            
                        }
                        
                        return false;
                    });
                    
                    return filtered;
                    
                }, this);
                
                
                /* Cart : Start */
                var cart = ko.observableArray([]);
                
                var showCartDetails = function () {
                    if (cart().length > 0) {
                        // $("#cartContainer").removeClass("hidden");
                        visibleCart(true);
                    }
                };
                
                var hideCartDetails = function () {
                    // $("#cartContainer").addClass("hidden");
                    visibleCart(false);
                };
                
                var addToCart = function (data) {
                    var item    = null,
                        tmpCart = cart(),
                        n       = tmpCart.length;
                        
                    while(n--) {
                        if (tmpCart[n].product.id() === data.id()) {
                            item = tmpCart[n];
                        }
                    }
                    
                    if (item) {
                        item.addUnit();
                    } else {
                        item = cartProduct(data, 0);
                        item.addUnit();
                        tmpCart.push(item);
                    }
                    cart(tmpCart);
                    
                };

                var removeFromCart = function (data) {
                    var units = data.units(),
                        stock = data.product.stock();
                    
                    data.product.stock(units + stock);
                    cart.remove(data);
                };
                
                /* Cart : End */

                
                /* cart widget : start */
                var totalItems = ko.computed( function () {
                    var tmpCart = cart(),
                        total   = 0;
                    
                    tmpCart.forEach(function (item) {
                        total = total + parseInt(item.units());
                    });
                    
                    return total;
                    
                } );
                
                var grandTotal = ko.computed(function () {
                    var tmpCart = cart(),
                        total   = 0;
                    
                    tmpCart.forEach(function (item) {
                        total = total + parseInt(item.units()) * parseInt(item.product.price());
                    });
                    
                    return total;                    
                });
                /* cart widget : end */
                
                
                /* order : start */
                var showOrder = function () {
                    // $("#catalogContainer").addClass("hidden");
                    // $("#orderContainer").removeClass("hidden");
                    visibleCatalog(false);
                };

                var showCatalog = function () {
                    // $("#catalogContainer").removeClass("hidden");
                    // $("#orderContainer").addClass("hidden");
                    visibleCatalog(true);
                };
                
                var finishOrder = function() {
                    cart([]);
                    hideCartDetails();
                    showCatalog();
                    $("#finishOrderModal").modal('show');
                };

                /* order : end */
                
                
                /* general : start */
                var visibleCatalog = ko.observable(true);
                var visibleCart = ko.observable(false);                
                /* general : end */
                
                return {
                    catalog: filteredCatalog,
                    searchTerm: searchTerm,
                    newProduct: newProduct,
                    addProduct: addProduct,
                    
                    /* cart */
                    cart: cart,
                    showCartDetails: showCartDetails,
                    hideCartDetails: hideCartDetails,
                    addToCart: addToCart,
                    removeFromCart: removeFromCart,
                    
                    /* cart widget */
                    totalItems: totalItems,
                    grandTotal: grandTotal,
                    
                    /* order */
                    showOrder: showOrder,
                    showCatalog: showCatalog,
                    finishOrder: finishOrder,
                    
                    /* general */
                    visibleCatalog: visibleCatalog,
                    visibleCart: visibleCart
                };
                            
            })();
            
            ko.applyBindings(vm);//This how knockout is activated
        });
    </script>    
    
</body>

</html>