<html>

<head>
    <title>Example: Custom Binding</title>
    <link href="../css/bootstrap.css" type="text/css" rel='stylesheet' />
</head>

<body>

    <div id="page">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    
                    <h1>Catalog</h1>                    
                    
                    <form class="form-horizontal" role="form" data-bind="with:newProduct">
                        <div class="form-group">
                            <div class="col-sm-12">
                                <input type="text" class="form-control" placeholder="Name" data-bind="textInput:name">
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                <input type="text" class="form-control" placeholder="Price" data-bind="textInput:price">
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                <input type="text" class="form-control" placeholder="Stock" data-bind="textInput:stock">
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                <button type="submit" class="btn btn-default" data-bind="{click:$parent.addProduct}">
                                    <i class="glyphicon glyphicon-plus-sign"></i> Add Product
                                </button>
                            </div>
                        </div>
                    </form>
                    
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i> Search</span>
                        <input type="text" class="form-control" data-bind="textInput: searchTerm">
                    </div>                    
                            
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Stock</th>
                            </tr>
                        </thead>
                        <tbody data-bind="foreach: catalog">
                            <tr>
                                <td data-bind="text: $data.id"></td>
                                <td data-bind="text: $data.name"></td>
                                <td data-bind="text: $data.price"></td>
                                <td data-bind="text: $data.stock"></td>
                            </tr>
                        </tbody>
                        <tfoot>
                            <tr>
                                <th colspan="4">Items: <span data-bind="text: catalog().length"></span></th>
                            </tr>
                        </tfoot>
                    </table>                
                    
                </div>
            </div>
            
            <pre data-bind="text: ko.toJSON($root, null, 1)"></pre>
            
        </div>
    </div>


    <script src="../js/lib/jquery-1.11.3.min.js"></script>
    <script src="../js/lib/knockout-3.4.0.js"></script>
    <script src="../js/model/product.js"></script>

    <script type="text/javascript">         
        $(document).ready(function() {
            
            var vm = (function() {

                var catalog = ko.observableArray([
                    Product(1, "T-Shirt", 10.00, 20),
                    Product(2, "Trousers", 20.00, 10),
                    Product(3, "Shirt", 15.00, 20),
                    Product(4, "Shorts", 5.00, 10)
                ]);
                
                var newProduct = Product("", "", "", "");
                
                var clearNewProduct = function () {
                    newProduct.name("");
                    newProduct.price("");
                    newProduct.stock("");
                };                
                
                var addProduct = function (context) {
                    var id = new Date().valueOf();  //random id from time                    
                    var newProduct = Product(id, context.name(), context.price(), context.stock());                    
                    
                    catalog.push(newProduct);
                    clearNewProduct();
                };
                                
                var searchTerm = ko.observable("");
                
                var filteredCatalog = ko.computed(function () {
                    
                    //if catalog is empty return empty array
                    if( !catalog().length ) {
                        return [];
                    }
                    
                    var filter = searchTerm().toLowerCase();
                    
                    //if filter is empty return all the catalog
                    if (!filter) {
                        return catalog();
                    }
                    
                    //filter data
                    var filtered = ko.utils.arrayFilter(catalog(), function (item) {
                        var fields = ["name"]; //we can filter several properties
                        var i = fields.length;
                        
                        while (i--) {
                            var prop = fields[i];
                            var strProp = ko.unwrap(item[prop]).toLocaleLowerCase();

                            if (strProp.indexOf(filter) !== -1){
                                return true;
                            };                            
                        }
                        
                        return false;
                    });
                    
                    return filtered;
                    
                }, this);
                
                return {
                    catalog: filteredCatalog,
                    searchTerm: searchTerm,
                    newProduct: newProduct,
                    addProduct: addProduct
                };
                            
            })();
            
            ko.applyBindings(vm);//This how knockout is activated
        });
    </script>
</body>

</html>